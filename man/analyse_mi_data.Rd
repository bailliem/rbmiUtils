% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/analyse_mi_data.R
\name{analyse_mi_data}
\alias{analyse_mi_data}
\title{Apply Analysis Function to Multiple Imputed Datasets}
\usage{
analyse_mi_data(
  data = NULL,
  vars = NULL,
  method = NULL,
  fun = rbmi::ancova,
  delta = NULL,
  ...
)
}
\arguments{
\item{data}{A data frame containing the imputed datasets. The data frame should include a variable (e.g., \code{IMPID}) that identifies distinct imputation iterations.}

\item{vars}{A list specifying key variables used in the analysis (e.g., \code{subjid}, \code{visit}, \code{group}, \code{outcome}). Required.}

\item{method}{A character string or object specifying the method used for analysis (e.g., Bayesian imputation). Defaults to \code{NULL}.}

\item{fun}{A function that will be applied to each imputed dataset. Defaults to \code{rbmi::ancova}. Must be a valid analysis function.}

\item{delta}{A \code{data.frame} used for delta adjustments, or \code{NULL} if no delta adjustments are needed. Defaults to \code{NULL}.}

\item{...}{Additional arguments passed to the analysis function \code{fun}.}
}
\value{
An object of class \code{analysis} containing the results from applying the analysis function to each imputed dataset.
}
\description{
This function applies an analysis function (e.g., ANCOVA) to imputed datasets and stores the results for later pooling. It is designed to work with multiple imputed datasets and apply a given analysis function to each imputation iteration.
}
\details{
The function loops through distinct imputation datasets (identified by \code{IMPID}), applies the provided analysis function \code{fun}, and stores the results for later pooling. If a \code{delta} dataset is provided, it will be merged with the imputed data to apply the specified delta adjustment before analysis.
}
\examples{
# Example usage with an ANCOVA function
library(dplyr)
library(rbmi)

data("ADMI")
N_IMPUTATIONS <- 100
BURN_IN <- 200
BURN_BETWEEN <- 5

# Convert key columns to factors
ADMI$TRT <- factor(ADMI$TRT, levels = c("Placebo", "Drug A"))
ADMI$USUBJID <- factor(ADMI$USUBJID)
ADMI$AVISIT <- factor(ADMI$AVISIT)

# Define key variables for ANCOVA analysis
 vars <- set_vars(
  subjid = "USUBJID",
  visit = "AVISIT",
  group = "TRT",
  outcome = "CHG",
  covariates = c("BASE", "STRATA", "REGION")  # Covariates for adjustment
 )

# Specify the imputation method (Bayesian) - need for pool step
 method <- rbmi::method_bayes(
 n_samples = N_IMPUTATIONS,
 control = rbmi::control_bayes(
   warmup = BURN_IN,
   thin = BURN_BETWEEN
   )
 )

# Perform ANCOVA Analysis on Each Imputed Dataset
ana_obj_ancova <- analyse_mi_data(
  data = ADMI,
  vars = vars,
  method = method,
  fun = ancova,  # Apply ANCOVA
  delta = NULL   # No sensitivity analysis adjustment
)

}
